** jgit2                                                           :noexport:
Java Foreign Function & Memory bindings for [[https://libgit2.org/][libgit2]].
** Table of contents                                                  :TOC_3:
  - [[#requirements][Requirements]]
  - [[#java-bindings][Java bindings]]
  - [[#usage-examples][Usage examples]]
    - [[#get-commit-message][Get commit message]]
    - [[#shorten-oids][Shorten OIDs]]
  - [[#license][License]]

** Requirements
To use this library, you must have =libgit2= installed on your system.

Make sure that the shared library (=libgit2.so= on Linux, =libgit2.dylib= on macOS, or =git2.dll= on Windows) is available in your library search path.  
** Java bindings
Java bindings were generated using [[https://github.com/openjdk/jextract][jextract]] by running the following command from the project root:
#+begin_src sh
  export LIBGIT2_HOME=/tmp/libgit2-1.9.0
  export JEXTRACT_HOME=/tmp/jextract-22

  ${JEXTRACT_HOME}/bin/jextract \
        --output src/main/java \
        --target-package com.sernamar.jgit2.bindings \
        --header-class-name git2 \
        --library :${LIBGIT2_HOME}/build/libgit2.so \
        --include-dir ${LIBGIT2_HOME}/include \
        ${LIBGIT2_HOME}/include/git2.h
#+end_src
** Usage examples
*** Get commit message
#+begin_src java
  import com.sernamar.jgit2.*;

  import java.nio.file.Paths;

  public class CommitMessage {
      public static void main(String[] args) {
          // Initialize libgit2
          Global.gitLibgit2Init();

          // Get the current path
          var path = Paths.get("").toAbsolutePath().toString();
          
          // Open repository
          var repo = Repository.gitRepositoryOpen(path);

          // Get the reference id of the main branch (refs/heads/main)
          var reference = "refs/heads/main";
          var referenceId = Refs.gitReferenceNameToId(repo, reference);

          // Get last commit
          var commit = Commit.gitCommitLookup(repo, referenceId);

          // Get and print the commit message
          String message = Commit.gitCommitMessage(commit);
          System.out.println("Commit message:");
          System.out.println(message);

          // Shutdown libgit2
          Global.gitLibgit2Shutdown();
      }
  }
#+end_src
*** Shorten OIDs
#+begin_src java
  import com.sernamar.jgit2.Global;
  import com.sernamar.jgit2.Oid;

  public class OidExample {
      public static void main(String[] args) {
          // Initialize libgit2
          Global.gitLibgit2Init();

          // OIDs to shorten
          var oid1 = "fc2f1be150833453be26f10d2a26cd2f967b9297";
          var oid2 = "e81e21fdc32c92e9a038a8b81d0ca22168b48c61";
          var oid3 = "0b5f2d2d328ef51052fa33b67985dd3c9cc602df";

          // Create a new OID shortener
          var minLength = 7;
          var shortener = Oid.gitOidShortenNew(minLength);

          // Add OIDs to the shortener
          var length1 = Oid.gitOidShortenAdd(shortener, oid1);
          var length2 = Oid.gitOidShortenAdd(shortener, oid2);
          var length3 = Oid.gitOidShortenAdd(shortener, oid3);

          // Print the shortened OIDs
          System.out.println("Shortened OIDs:");
          System.out.println("OID 1: " + oid1.substring(0, length1));
          System.out.println("OID 2: " + oid2.substring(0, length2));
          System.out.println("OID 3: " + oid3.substring(0, length3));

          // Free the OID shortener
          Oid.gitOidShortenFree(shortener);

          // Shutdown libgit2
          Global.gitLibgit2Shutdown();
      }
  }
#+end_src
** License
Copyright Â© 2025 Sergio Navarro

Distributed under the [[https://opensource.org/licenses/mit][MIT License]].
