** jgit2                                                           :noexport:
Java Foreign Function & Memory bindings for [[https://libgit2.org/][libgit2]].
** Table of contents                                                  :TOC_3:
  - [[#requirements][Requirements]]
  - [[#java-bindings][Java bindings]]
  - [[#usage-examples][Usage examples]]
    - [[#get-commit-message][Get commit message]]
    - [[#shorten-oids][Shorten OIDs]]
  - [[#license][License]]

** Requirements
To use this library, you must have =libgit2= installed on your system.

Make sure that the shared library (=libgit2.so= on Linux, =libgit2.dylib= on macOS, or =git2.dll= on Windows) is available in your library search path.  
** Java bindings
Java bindings were generated using [[https://github.com/openjdk/jextract][jextract]] by running the following command from the project root:
#+begin_src sh
  export LIBGIT2_HOME=/tmp/libgit2-1.9.0
  export JEXTRACT_HOME=/tmp/jextract-22

  ${JEXTRACT_HOME}/bin/jextract \
        --output src/main/java \
        --target-package com.sernamar.jgit2.bindings \
        --header-class-name git2 \
        --library :${LIBGIT2_HOME}/build/libgit2.so \
        --include-dir ${LIBGIT2_HOME}/include \
        ${LIBGIT2_HOME}/include/git2.h
#+end_src
** Usage examples
*** Get commit message
#+begin_src java
  package com.sernamar.examples;

  import com.sernamar.jgit2.GitCommit;
  import com.sernamar.jgit2.GitOid;
  import com.sernamar.jgit2.GitRepository;

  import java.nio.file.Paths;

  import static com.sernamar.jgit2.Commit.gitCommitLookup;
  import static com.sernamar.jgit2.Commit.gitCommitMessage;
  import static com.sernamar.jgit2.Global.gitLibgit2Init;
  import static com.sernamar.jgit2.Global.gitLibgit2Shutdown;
  import static com.sernamar.jgit2.Refs.gitReferenceNameToId;
  import static com.sernamar.jgit2.Repository.gitRepositoryOpen;

  public class CommitMessage {
      public static void main(String[] args) {
          // Initialize libgit2
          gitLibgit2Init();

          // Get the current path
          String path = Paths.get("").toAbsolutePath().toString();

          // Open repository
          try (GitRepository repo = gitRepositoryOpen(path)) {

              // Get the reference id of "HEAD"
              // Note that `GitOid` represents a fixed-size value and does not allocate resources that need to be
              // explicitly released, so it does not require try-with-resources.
              GitOid referenceId = gitReferenceNameToId(repo, "HEAD");

              // Get last commit
              try (GitCommit commit = gitCommitLookup(repo, referenceId)){

                  // Get commit message and print it
                  String message = gitCommitMessage(commit);
                  System.out.println("Commit message:");
                  System.out.println(message);
              }
          }

          // Shutdown libgit2
          gitLibgit2Shutdown();
      }
  }
#+end_src
*** Shorten OIDs
#+begin_src java
  package com.sernamar.examples;

  import com.sernamar.jgit2.GitOidShorten;
  import com.sernamar.jgit2.Global;
  import com.sernamar.jgit2.Oid;

  import static com.sernamar.jgit2.Oid.gitOidShortenNew;

  public class OidExample {
      public static void main(String[] args) {
          // Initialize libgit2
          Global.gitLibgit2Init();

          // OIDs to shorten
          String oid1 = "fc2f1be150833453be26f10d2a26cd2f967b9297";
          String oid2 = "e81e21fdc32c92e9a038a8b81d0ca22168b48c61";
          String oid3 = "0b5f2d2d328ef51052fa33b67985dd3c9cc602df";

          // Create a new OID shortener
          long minLength = 7;
          try (GitOidShorten shorten = gitOidShortenNew(minLength)) {
              // Add OIDs to the shortener
              int length1 = Oid.gitOidShortenAdd(shorten, oid1);
              int length2 = Oid.gitOidShortenAdd(shorten, oid2);
              int length3 = Oid.gitOidShortenAdd(shorten, oid3);

              // Print the shortened OIDs
              System.out.println("Shortened OIDs:");
              System.out.println("OID 1: " + oid1.substring(0, length1));
              System.out.println("OID 2: " + oid2.substring(0, length2));
              System.out.println("OID 3: " + oid3.substring(0, length3));
          }

          // Shutdown libgit2
          Global.gitLibgit2Shutdown();
      }
  }
#+end_src
** License
Copyright Â© 2025 Sergio Navarro

Distributed under the [[https://opensource.org/licenses/mit][MIT License]].
